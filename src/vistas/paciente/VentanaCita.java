/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vistas.paciente;

import controladores.ControladorProgramarCita;
import enums.Especializacion;
import excepciones.FechaInvalidaException;
import excepciones.LimiteDeCitasException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Cita;
import modelos.Medico;
import modelos.Paciente;
import util.LSE;

/**
 *
 * @author LENOVO
 */
public class VentanaCita extends javax.swing.JInternalFrame {
    
    private final Paciente paciente;
    private final ControladorProgramarCita controlador;
    

    /**
     * Creates new form VentanaCita
     */
    public VentanaCita(Paciente paciente) {
        initComponents();
        this.paciente = paciente;
        controlador = new ControladorProgramarCita(paciente);
        llenarComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSeleccion = new javax.swing.JLabel();
        cbxEspecializacion = new javax.swing.JComboBox<>();
        btnBuscar = new javax.swing.JButton();
        lblMedicosDisponibles = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMedicosDisponibles = new javax.swing.JTable();
        lblCita = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblCedula = new javax.swing.JLabel();
        lblHora = new javax.swing.JLabel();
        lblMotivo = new javax.swing.JLabel();
        txtMotivo = new javax.swing.JTextField();
        btnRegistrarCita = new javax.swing.JButton();
        lblCedulaMedico = new javax.swing.JLabel();
        lblNombreMedico = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaHorarios = new javax.swing.JTable();
        lblMedicosDisponibles1 = new javax.swing.JLabel();
        lblHoraCita = new javax.swing.JLabel();
        fechaCita = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Agendar cita");

        lblSeleccion.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        lblSeleccion.setText("Seleccionar especialización");

        cbxEspecializacion.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        cbxEspecializacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnBuscar.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        lblMedicosDisponibles.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        lblMedicosDisponibles.setText("Medicos disponibles");

        jScrollPane1.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N

        tablaMedicosDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaMedicosDisponibles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMedicosDisponiblesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaMedicosDisponibles);

        lblCita.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        lblCita.setText("Cita");

        lblFecha.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        lblFecha.setText("Fecha");

        lblNombre.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        lblNombre.setText("Nombre médico");

        lblCedula.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        lblCedula.setText("Cédula médico");

        lblHora.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        lblHora.setText("Hora");

        lblMotivo.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        lblMotivo.setText("Motivo cita");

        txtMotivo.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N

        btnRegistrarCita.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        btnRegistrarCita.setText("Registrar cita");
        btnRegistrarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarCitaActionPerformed(evt);
            }
        });

        lblCedulaMedico.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N

        lblNombreMedico.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N

        tablaHorarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaHorarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaHorariosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaHorarios);

        lblMedicosDisponibles1.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        lblMedicosDisponibles1.setText("Horarios");

        lblHoraCita.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblSeleccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbxEspecializacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMedicosDisponibles)
                    .addComponent(btnBuscar)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMedicosDisponibles1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(lblCita))
                            .addComponent(lblMotivo)
                            .addComponent(txtMotivo)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCedula)
                                    .addComponent(lblNombre)
                                    .addComponent(lblFecha)
                                    .addComponent(lblHora))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(87, 87, 87)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblNombreMedico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblCedulaMedico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblHoraCita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(fechaCita, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(80, 80, 80))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRegistrarCita)
                        .addGap(208, 208, 208))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeleccion)
                    .addComponent(lblCita))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(cbxEspecializacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscar)
                            .addComponent(lblNombre)
                            .addComponent(lblNombreMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCedula)
                            .addComponent(lblCedulaMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(lblMedicosDisponibles))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fechaCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFecha))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHora)
                            .addComponent(lblHoraCita, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(lblMotivo)
                        .addGap(18, 18, 18)
                        .addComponent(txtMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(btnRegistrarCita)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMedicosDisponibles1)
                        .addGap(31, 31, 31)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        
        if(cbxEspecializacion.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Elija una especialización");
            return;
        }
        
        String especializaciones = (String) cbxEspecializacion.getSelectedItem();
        Especializacion especializacion = Especializacion.valueOf(especializaciones.toUpperCase());
        
        llenarTabla1(especializacion);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnRegistrarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarCitaActionPerformed
        // TODO add your handling code here:
        if(camposVacios()){
            JOptionPane.showMessageDialog(null, "Ingrese todos los datos");
            return;
        }
        
        String cedula = lblCedulaMedico.getText();
        
        Medico medico = controlador.buscarMedico(cedula);
        Date date = fechaCita.getDate();
        String motivo = txtMotivo.getText();
        
        try{
            
            LocalDate fecha = (date != null) ? date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate() : null;
            LocalTime hora = LocalTime.parse(lblHoraCita.getText());
            
            Cita cita = new Cita(paciente, medico, fecha, hora, motivo);
            controlador.agendarCita(cita);
            
            JOptionPane.showMessageDialog(null, "Cita agendada correctamente");
            
        }catch(LimiteDeCitasException | FechaInvalidaException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnRegistrarCitaActionPerformed

    private void tablaMedicosDisponiblesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMedicosDisponiblesMouseClicked
        // TODO add your handling code here:
        int seleccion = tablaMedicosDisponibles.getSelectedRow();
        String cedula = tablaMedicosDisponibles.getModel().getValueAt(seleccion, 0).toString();
        Medico medico = controlador.buscarMedico(cedula);
        
        lblCedulaMedico.setText(medico.getCedula());
        lblNombreMedico.setText(medico.getNombre());
        
        Date date = fechaCita.getDate();
        
        LocalDate  fecha = (date != null) ? date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate() : null;
        
        if(fecha != null){
            if(!fecha.isBefore(LocalDate.now())){
                llenarTabla2(medico, fecha);
            }else{
                JOptionPane.showMessageDialog(null, "La fecha es invalida, seleccione otra fecha");
            }
        }
        
    }//GEN-LAST:event_tablaMedicosDisponiblesMouseClicked

    private void tablaHorariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaHorariosMouseClicked
        // TODO add your handling code here:
        int seleccion = tablaHorarios.getSelectedRow();
        String hora = tablaHorarios.getModel().getValueAt(seleccion, 0).toString();
        
        lblHoraCita.setText(hora);
    }//GEN-LAST:event_tablaHorariosMouseClicked
    
    
    private void llenarTabla1(Especializacion especializacion){
        DefaultTableModel modelo = new DefaultTableModel();
        
        LSE<Medico> medicos = controlador.listaEspecializacion(especializacion);
        
        modelo.setColumnIdentifiers(new Object[]{
            "Cédula médico", "Nombre médico"
        });
        
        tablaMedicosDisponibles.setModel(modelo);
        
        if(!medicos.isEmpty()){
            for(int i = 0; i < medicos.size(); i++){
                Medico medico = medicos.get(i);
                modelo.addRow(new Object[]{
                    medico.getCedula(),
                    medico.getNombre(),
                    medico.getHoraInicioJornada() + "-" + medico.getHoraFinJornada()
                });
            }
        }else{
            JOptionPane.showMessageDialog(null, "No hay medicos disponibles");
            cbxEspecializacion.setSelectedIndex(0);
        }
    }
    
    private void llenarTabla2(Medico medico, LocalDate fecha){
        DefaultTableModel modelo = new DefaultTableModel();
        LSE<LocalTime> horas = controlador.listaHorarioDisponible(medico, fecha);
        
        modelo.setColumnIdentifiers(new Object[]{
            "Horario"
        });
        
        tablaHorarios.setModel(modelo);
        
        for(int i = 0; i < horas.size(); i++){
            modelo.addRow(new Object[]{
                horas.get(i)
            });
        }
    }
    
    private boolean camposVacios(){
        return cbxEspecializacion.getSelectedIndex() == 0 || lblCedulaMedico.getText().isEmpty()
          || fechaCita.getDate() == null || txtMotivo.getText().isEmpty();
    }
    
    private void llenarComboBox(){
        cbxEspecializacion.setModel(new javax.swing.DefaultComboBoxModel<>(Especializacion.obtenerEspecializaciones()));
        cbxEspecializacion.insertItemAt("Elija una opción", 0);
        cbxEspecializacion.setSelectedIndex(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnRegistrarCita;
    private javax.swing.JComboBox<String> cbxEspecializacion;
    private com.toedter.calendar.JDateChooser fechaCita;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblCedulaMedico;
    private javax.swing.JLabel lblCita;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblHora;
    private javax.swing.JLabel lblHoraCita;
    private javax.swing.JLabel lblMedicosDisponibles;
    private javax.swing.JLabel lblMedicosDisponibles1;
    private javax.swing.JLabel lblMotivo;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombreMedico;
    private javax.swing.JLabel lblSeleccion;
    private javax.swing.JTable tablaHorarios;
    private javax.swing.JTable tablaMedicosDisponibles;
    private javax.swing.JTextField txtMotivo;
    // End of variables declaration//GEN-END:variables
}
