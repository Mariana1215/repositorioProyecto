/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vistas.medico;

import controladores.ControladorCitasMedico;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Cita;
import modelos.Medico;
import util.LSE;

/**
 *
 * @author LENOVO
 */
public class VentanaVerCitas extends javax.swing.JInternalFrame {
    
    private final Medico medico;
    private final controladores.ControladorCitasMedico controlador;

    /**
     * Creates new form VentanaAtencionCita
     */
    public VentanaVerCitas(Medico medico) {
        initComponents();
        this.medico = medico;
        controlador = new ControladorCitasMedico(medico);
        llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCitas = new javax.swing.JTable();
        btnAtender = new javax.swing.JButton();
        fechaCita = new com.toedter.calendar.JDateChooser();
        btnBuscarFecha = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Ver citas");

        tablaCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaCitas);

        btnAtender.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        btnAtender.setText("Atender");
        btnAtender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtenderActionPerformed(evt);
            }
        });

        fechaCita.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N

        btnBuscarFecha.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        btnBuscarFecha.setText("Buscar fecha");
        btnBuscarFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarFechaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(fechaCita, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarFecha)
                            .addComponent(btnAtender))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(fechaCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnBuscarFecha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAtender)
                .addGap(217, 217, 217))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtenderActionPerformed
        // TODO add your handling code here:
        int seleccion = tablaCitas.getSelectedRow();
        
        if(seleccion >= 0){
            int id = (int) tablaCitas.getModel().getValueAt(seleccion, 0);
            LocalDate fecha = (LocalDate) tablaCitas.getModel().getValueAt(seleccion, 3);
            Cita cita = controlador.buscarCita(id);
            
           if( fecha.isEqual(LocalDate.now())){
               VentanaAtencion ventana = new  VentanaAtencion(medico, cita);
               VentanaOpcionesMedico.background.add(ventana);
               ventana.setVisible(true);
               this.dispose();
           }else{
               JOptionPane.showMessageDialog(null, "La cita esta programada para otro dia");
           }
            
        }else{
            JOptionPane.showMessageDialog(null, "Elija una cita");
        }
    }//GEN-LAST:event_btnAtenderActionPerformed

    private void btnBuscarFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarFechaActionPerformed
        // TODO add your handling code here:
        Date fecha = fechaCita.getDate();
        
        if(fecha == null){
            JOptionPane.showMessageDialog(null, "Debe de ingresar una fecha");
            return;
        }
        filtrarFecha();
    }//GEN-LAST:event_btnBuscarFechaActionPerformed
    
    private void filtrarFecha(){
        Date fecha = fechaCita.getDate();
        
        LocalDate fechaCita = (fecha != null) ? fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate() : null;
        
        DefaultTableModel modelo = new DefaultTableModel();
        
        LSE<Cita> filtrarFechaCita = controlador.ListaDeCitasPorFechas(fechaCita);
        
        modelo.setColumnIdentifiers(new Object[]{
            "ID","Nombre","Cédula","Fecha","Hora","Motivo"
        });
        
        tablaCitas.setModel(modelo);
        
        if(!filtrarFechaCita.isEmpty()){
            agregarDatos(filtrarFechaCita, modelo);
        }else{
            JOptionPane.showMessageDialog(null, "No hay citas progrmadas para ese día");
//            limpiarCampos();
            llenarTabla();
        }
    }
    
    private void agregarDatos(LSE<Cita> citas, DefaultTableModel modelo){
        for(int i = 0; i < citas.size(); i++){
            Cita cita = citas.get(i);
            modelo.addRow(new Object[]{
                cita.getId(),
                cita.getPaciente().getCedula(),
                cita.getPaciente().getNombre(),
                cita.getFecha(),
                cita.getHoraInicio(),
                cita.getMotivo()
                    
            });
        }
    }
    private void llenarTabla(){
        DefaultTableModel modelo = new DefaultTableModel();
        
        LSE<Cita> citas = medico.getCitas();
        
        modelo.setColumnIdentifiers(new Object[]{
            "ID","Nombre","Cédula","Fecha","Hora","Motivo"
        });
        
        tablaCitas.setModel(modelo);
        for(int i = 0; i < citas.size(); i++){
            Cita cita = (Cita) citas.get(i);
            modelo.addRow(new Object[]{
                cita.getId(),
                cita.getPaciente().getCedula(),
                cita.getPaciente().getNombre(),
                cita.getFecha(),
                cita.getHoraInicio(),
                cita.getMotivo()
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtender;
    private javax.swing.JButton btnBuscarFecha;
    private com.toedter.calendar.JDateChooser fechaCita;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaCitas;
    // End of variables declaration//GEN-END:variables
}
